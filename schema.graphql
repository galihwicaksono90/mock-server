### This file was generated by Nexus Schema
### Do not make changes to this file directly


type About {
  description: String!
  image: String!
  type: String!
}

enum AboutType {
  jurusan
  organisasi
}

type Activity {
  description: String!
  id: Int!
  image: String!
  postedAt: DateTime!
  title: String!
}

type Area {
  id: Int!
  name: String!
}

type Article {
  description: String!
  id: Int!
  image: String!
  postedAt: DateTime!
  title: String!
}

enum ArticleType {
  nonScientific
  scientific
}

type AuthPayload {
  token: String
  user: User
}

type Company {
  address: String!
  city: String!
  description: String!
  email: String!
  expiredAt: String!
  id: Int!
  image: String!
  jobs: [Job!]!
  name: String!
  postedAt: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type FieldError {
  field: String
  message: String
}

type FieldErrors {
  errors: [FieldError]
}

type HeroImage {
  id: Int!
  image: String!
  message: String!
}

type Job {
  description: String!
  id: Int!
  qualifications: [String!]!
  title: String!
}

type Member {
  classYear: Int!
  email: String!
  field: String!
  id: Int!
  image: String!
  name: String!
  title: String!
}

type Merch {
  id: Int!
  image: String!
  name: String!
  price: String!
}

type Mutation {
  login(nim: Int!, password: String!): AuthPayload!
  register(classYear: String!, confirmPassword: String!, email: String!, fullName: String!, gender: String!, nim: Int!, password: String!, phone: Int!, prefixTitle: String, suffixTitle: String): User!
  validateResetToken(token: String): Boolean!
}

type News {
  author: String!
  content: String!
  createdAt: DateTime!
  description: String!
  id: Int!
  image: String!
  tags: [String!]!
  title: String!
}

type Query {
  getAbout(type: AboutType!): About
  getActivites(limit: Int!): [Activity!]!
  getActivity(id: Int!): Activity
  getAreas: [Area!]!
  getArticle(id: Int!): Article
  getArticles(limit: Int!, type: ArticleType!): [Article!]!
  getCompanyJobs: [Company!]!
  getHeroImages(limit: Int!): [HeroImage]!
  getMembers(field: String!, limit: Int!): [Member!]!
  getMerchList(limit: Int!): [Merch!]!
  getNews(id: Int!): News
  getNewsItems(limit: Int!): [News!]!
  getTestimonies(limit: Int!): [Testimony!]!
  getVacancies(limit: Int, type: VacancyType!): [Vacancy]!
}

type ResetToken {
  token: String!
}

type Testimony {
  description: String!
  endYear: Int!
  id: Int!
  image: String!
  name: String!
  startYear: Int!
}

type User {
  email: String!
  fullName: String!
  id: Int!
  role: String!
}

enum UserRole {
  admin
  guess
  user
}

type Vacancy {
  company: String!
  id: Int!
  title: String!
  type: String!
}

enum VacancyType {
  job
  scholarship
}